// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;

    public class GeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

        private GeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class GeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static GeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(15)
            {
                { typeof(global::System.Collections.Generic.List<global::MsgPackObj.A>), 0 },
                { typeof(global::abelkhan.ProtoRoot), 1 },
                { typeof(global::abelkhan.uuid_sync_uuid_struct_err), 2 },
                { typeof(global::abelkhan.uuid_sync_uuid_struct_req), 3 },
                { typeof(global::abelkhan.uuid_sync_uuid_struct_rsp), 4 },
                { typeof(global::abelkhan.xor_key_refresh_xor_key_struct_ntf), 5 },
                { typeof(global::Account), 6 },
                { typeof(global::HttpBasePacket), 7 },
                { typeof(global::MsgPackObj), 8 },
                { typeof(global::MsgPackObj.A), 9 },
                { typeof(global::MsgPackObj.A.TName), 10 },
                { typeof(global::TestCaseByteArray), 11 },
                { typeof(global::UserBag), 12 },
                { typeof(global::UserCharacter), 13 },
                { typeof(global::UserScene), 14 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new global::MessagePack.Formatters.ListFormatter<global::MsgPackObj.A>();
                case 1: return new MessagePack.Formatters.abelkhan.ProtoRootFormatter();
                case 2: return new MessagePack.Formatters.abelkhan.uuid_sync_uuid_struct_errFormatter();
                case 3: return new MessagePack.Formatters.abelkhan.uuid_sync_uuid_struct_reqFormatter();
                case 4: return new MessagePack.Formatters.abelkhan.uuid_sync_uuid_struct_rspFormatter();
                case 5: return new MessagePack.Formatters.abelkhan.xor_key_refresh_xor_key_struct_ntfFormatter();
                case 6: return new MessagePack.Formatters.AccountFormatter();
                case 7: return new MessagePack.Formatters.HttpBasePacketFormatter();
                case 8: return new MessagePack.Formatters.MsgPackObjFormatter();
                case 9: return new MessagePack.Formatters.MsgPackObj_AFormatter();
                case 10: return new MessagePack.Formatters.MsgPackObj_A_TNameFormatter();
                case 11: return new MessagePack.Formatters.TestCaseByteArrayFormatter();
                case 12: return new MessagePack.Formatters.UserBagFormatter();
                case 13: return new MessagePack.Formatters.UserCharacterFormatter();
                case 14: return new MessagePack.Formatters.UserSceneFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name




// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.abelkhan
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class ProtoRootFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::abelkhan.ProtoRoot>
    {


        public void Serialize(ref MessagePackWriter writer, global::abelkhan.ProtoRoot value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.module_name, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.method_name, options);
            formatterResolver.GetFormatterWithVerify<byte[]>().Serialize(ref writer, value.argvs, options);
        }

        public global::abelkhan.ProtoRoot Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __module_name__ = default(string);
            var __method_name__ = default(string);
            var __argvs__ = default(byte[]);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __module_name__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __method_name__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __argvs__ = formatterResolver.GetFormatterWithVerify<byte[]>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::abelkhan.ProtoRoot();
            ____result.module_name = __module_name__;
            ____result.method_name = __method_name__;
            ____result.argvs = __argvs__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class uuid_sync_uuid_struct_errFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::abelkhan.uuid_sync_uuid_struct_err>
    {


        public void Serialize(ref MessagePackWriter writer, global::abelkhan.uuid_sync_uuid_struct_err value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value._cb_uuid, options);
            writer.Write(value.errcode);
        }

        public global::abelkhan.uuid_sync_uuid_struct_err Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ___cb_uuid__ = default(string);
            var __errcode__ = default(int);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        ___cb_uuid__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __errcode__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::abelkhan.uuid_sync_uuid_struct_err();
            ____result._cb_uuid = ___cb_uuid__;
            ____result.errcode = __errcode__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class uuid_sync_uuid_struct_reqFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::abelkhan.uuid_sync_uuid_struct_req>
    {


        public void Serialize(ref MessagePackWriter writer, global::abelkhan.uuid_sync_uuid_struct_req value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value._cb_uuid, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.uuid, options);
        }

        public global::abelkhan.uuid_sync_uuid_struct_req Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ___cb_uuid__ = default(string);
            var __uuid__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        ___cb_uuid__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __uuid__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::abelkhan.uuid_sync_uuid_struct_req();
            ____result._cb_uuid = ___cb_uuid__;
            ____result.uuid = __uuid__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class uuid_sync_uuid_struct_rspFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::abelkhan.uuid_sync_uuid_struct_rsp>
    {


        public void Serialize(ref MessagePackWriter writer, global::abelkhan.uuid_sync_uuid_struct_rsp value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value._cb_uuid, options);
        }

        public global::abelkhan.uuid_sync_uuid_struct_rsp Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var ___cb_uuid__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        ___cb_uuid__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::abelkhan.uuid_sync_uuid_struct_rsp();
            ____result._cb_uuid = ___cb_uuid__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class xor_key_refresh_xor_key_struct_ntfFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::abelkhan.xor_key_refresh_xor_key_struct_ntf>
    {


        public void Serialize(ref MessagePackWriter writer, global::abelkhan.xor_key_refresh_xor_key_struct_ntf value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.xor_key);
        }

        public global::abelkhan.xor_key_refresh_xor_key_struct_ntf Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __xor_key__ = default(uint);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __xor_key__ = reader.ReadUInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::abelkhan.xor_key_refresh_xor_key_struct_ntf();
            ____result.xor_key = __xor_key__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class AccountFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::Account>
    {


        public void Serialize(ref MessagePackWriter writer, global::Account value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(5);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.UUID, options);
            writer.Write(value.type);
            formatterResolver.GetFormatterWithVerify<global::UserCharacter>().Serialize(ref writer, value.character, options);
            formatterResolver.GetFormatterWithVerify<global::UserBag>().Serialize(ref writer, value.bag, options);
            formatterResolver.GetFormatterWithVerify<global::UserScene>().Serialize(ref writer, value.scene, options);
        }

        public global::Account Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UUID__ = default(string);
            var __type__ = default(short);
            var __character__ = default(global::UserCharacter);
            var __bag__ = default(global::UserBag);
            var __scene__ = default(global::UserScene);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UUID__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __type__ = reader.ReadInt16();
                        break;
                    case 2:
                        __character__ = formatterResolver.GetFormatterWithVerify<global::UserCharacter>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __bag__ = formatterResolver.GetFormatterWithVerify<global::UserBag>().Deserialize(ref reader, options);
                        break;
                    case 4:
                        __scene__ = formatterResolver.GetFormatterWithVerify<global::UserScene>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::Account();
            ____result.UUID = __UUID__;
            ____result.type = __type__;
            ____result.character = __character__;
            ____result.bag = __bag__;
            ____result.scene = __scene__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class HttpBasePacketFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::HttpBasePacket>
    {


        public void Serialize(ref MessagePackWriter writer, global::HttpBasePacket value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.uuid, options);
            writer.Write(value.timeStamp);
            formatterResolver.GetFormatterWithVerify<byte[]>().Serialize(ref writer, value.rawData, options);
        }

        public global::HttpBasePacket Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __uuid__ = default(string);
            var __timeStamp__ = default(ulong);
            var __rawData__ = default(byte[]);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __uuid__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __timeStamp__ = reader.ReadUInt64();
                        break;
                    case 2:
                        __rawData__ = formatterResolver.GetFormatterWithVerify<byte[]>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::HttpBasePacket();
            ____result.uuid = __uuid__;
            ____result.timeStamp = __timeStamp__;
            ____result.rawData = __rawData__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class MsgPackObjFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::MsgPackObj>
    {


        public void Serialize(ref MessagePackWriter writer, global::MsgPackObj value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::System.Collections.Generic.List<global::MsgPackObj.A>>().Serialize(ref writer, value.a, options);
        }

        public global::MsgPackObj Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __a__ = default(global::System.Collections.Generic.List<global::MsgPackObj.A>);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __a__ = formatterResolver.GetFormatterWithVerify<global::System.Collections.Generic.List<global::MsgPackObj.A>>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::MsgPackObj();
            ____result.a = __a__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class MsgPackObj_AFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::MsgPackObj.A>
    {


        public void Serialize(ref MessagePackWriter writer, global::MsgPackObj.A value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(3);
            writer.Write(value.UserID);
            formatterResolver.GetFormatterWithVerify<global::MsgPackObj.A.TName>().Serialize(ref writer, value.Name, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.Email, options);
        }

        public global::MsgPackObj.A Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __UserID__ = default(int);
            var __Name__ = default(global::MsgPackObj.A.TName);
            var __Email__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __UserID__ = reader.ReadInt32();
                        break;
                    case 1:
                        __Name__ = formatterResolver.GetFormatterWithVerify<global::MsgPackObj.A.TName>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __Email__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::MsgPackObj.A();
            ____result.UserID = __UserID__;
            ____result.Name = __Name__;
            ____result.Email = __Email__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class MsgPackObj_A_TNameFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::MsgPackObj.A.TName>
    {


        public void Serialize(ref MessagePackWriter writer, global::MsgPackObj.A.TName value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.FirstName, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.LastName, options);
        }

        public global::MsgPackObj.A.TName Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __FirstName__ = default(string);
            var __LastName__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __FirstName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __LastName__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::MsgPackObj.A.TName();
            ____result.FirstName = __FirstName__;
            ____result.LastName = __LastName__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class TestCaseByteArrayFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::TestCaseByteArray>
    {


        public void Serialize(ref MessagePackWriter writer, global::TestCaseByteArray value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<byte[]>().Serialize(ref writer, value.a, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.b, options);
        }

        public global::TestCaseByteArray Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __a__ = default(byte[]);
            var __b__ = default(string);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __a__ = formatterResolver.GetFormatterWithVerify<byte[]>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __b__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::TestCaseByteArray();
            ____result.a = __a__;
            ____result.b = __b__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class UserBagFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::UserBag>
    {


        public void Serialize(ref MessagePackWriter writer, global::UserBag value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.capacity);
        }

        public global::UserBag Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __capacity__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __capacity__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::UserBag();
            ____result.capacity = __capacity__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class UserCharacterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::UserCharacter>
    {


        public void Serialize(ref MessagePackWriter writer, global::UserCharacter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.modelType);
        }

        public global::UserCharacter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __modelType__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __modelType__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::UserCharacter();
            ____result.modelType = __modelType__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class UserSceneFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::UserScene>
    {


        public void Serialize(ref MessagePackWriter writer, global::UserScene value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            writer.Write(value.type);
        }

        public global::UserScene Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __type__ = default(short);

            for (int i = 0; i < length; i++)
            {
                var key = i;

                switch (key)
                {
                    case 0:
                        __type__ = reader.ReadInt16();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::UserScene();
            ____result.type = __type__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

