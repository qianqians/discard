#include <endflower.h>

float cube[36*3] = { -1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0, 1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,
					 -1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,1.0, -1.0,-1.0,1.0,1.0,1.0,1.0,1.0,-1.0,1.0,
				     1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,1.0, 1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,
					 -1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0, -1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,
					 -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0, 1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,
					 -1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0, -1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0
				    };

float cubecolor[36 * 3] = { 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0, 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
							1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0, 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
							1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0, 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
							1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0, 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
							1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0, 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,
							1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0, 1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0
						   };

int main() {
	wnd w("endflower", 0, 0, 640, 480);

	auto c = w.get_context();
	c->lookat(2.0,2.0,2.0, 0.0,1.0,0.0, 0.0,0.0,0.0);
	
	shader s("vertexshader.glsl", "fragmentshader.glsl");

	vertext v;
	v.vert = cube;
	v._count = 36 * 3;

	auto _render = boost::make_shared<render>();
	_render->setvertext(&v);
	_render->setshader(&s);
	_render->update(s.get_program());

	c->addrender(_render);
	
	//w.sigRawInput.connect();

	while (1) {
		run();
	}

	return 0;
}